// --- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —É–ª—É—á—à–µ–Ω–∏–π ---
// –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ requiredEssence: —Å–∫–æ–ª—å–∫–æ –Ω—É–∂–Ω–æ —ç—Å—Å–µ–Ω—Ü–∏–∏, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ
const upgrades = [
    // --- –ù–∞—á–∞–ª—å–Ω—ã–π –¢–∏—Ä (–î–æ—Å—Ç—É–ø–Ω—ã —Å—Ä–∞–∑—É) ---
    { id: 'click1', name: '–£–ª—É—á—à–µ–Ω–Ω—ã–π —Ä–µ—Ü–µ–ø—Ç', description: '+1 –∫ –∫–ª–∏–∫—É', baseCost: 15, costMultiplier: 1.4, type: 'click', value: 1, currentLevel: 0, requiredEssence: 0 },
    { id: 'auto1', name: '–ì–æ–º—É–Ω–∫—É–ª-–ü–æ–º–æ—â–Ω–∏–∫', description: '+1 –≤ —Å–µ–∫—É–Ω–¥—É', baseCost: 60, costMultiplier: 1.6, type: 'auto', value: 1, currentLevel: 0, requiredEssence: 0 },

    // --- –¢–∏—Ä 2 (–¢—Ä–µ–±—É–µ—Ç—Å—è ~500+ –≠—Å—Å–µ–Ω—Ü–∏–∏) ---
    { id: 'click2', name: '–ó–∞—á–∞—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—É–ø–∫–∞', description: '+5 –∫ –∫–ª–∏–∫—É', baseCost: 300, costMultiplier: 1.5, type: 'click', value: 5, currentLevel: 0, requiredEssence: 500 },
    { id: 'auto2', name: '–ü—É–∑—ã—Ä—è—â–∏–π—Å—è –∫–æ—Ç–µ–ª', description: '+4 –≤ —Å–µ–∫—É–Ω–¥—É', baseCost: 750, costMultiplier: 1.7, type: 'auto', value: 4, currentLevel: 0, requiredEssence: 700 },

    // --- –¢–∏—Ä 3 (–¢—Ä–µ–±—É–µ—Ç—Å—è ~10,000+ –≠—Å—Å–µ–Ω—Ü–∏–∏) ---
    { id: 'click3', name: '–ê–ª–µ–º–±–∏–∫ –ú–∞—Å—Ç–µ—Ä–∞', description: '+25 –∫ –∫–ª–∏–∫—É', baseCost: 5000, costMultiplier: 1.6, type: 'click', value: 25, currentLevel: 0, requiredEssence: 10000 },
    { id: 'auto3', name: '–ü—Ä–∏–∑–≤–∞–Ω–Ω—ã–π –ò—Ñ—Ä–∏—Ç', description: '+20 –≤ —Å–µ–∫—É–Ω–¥—É', baseCost: 12000, costMultiplier: 1.8, type: 'auto', value: 20, currentLevel: 0, requiredEssence: 15000 },
    { id: 'auto4', name: '–°–∞–¥ –ê–ª—Ö–∏–º–∏—á–µ—Å–∫–∏—Ö –†–∞—Å—Ç–µ–Ω–∏–π', description: '+50 –≤ —Å–µ–∫—É–Ω–¥—É', baseCost: 30000, costMultiplier: 1.9, type: 'auto', value: 50, currentLevel: 0, requiredEssence: 40000 },


    // --- –¢–∏—Ä 4 (–¢—Ä–µ–±—É–µ—Ç—Å—è ~500,000+ –≠—Å—Å–µ–Ω—Ü–∏–∏) ---
     { id: 'click4', name: '–°–∏–ª–∞ –§–∏–ª–æ—Å–æ—Ñ—Å–∫–æ–≥–æ –ö–∞–º–Ω—è (–æ—Å–∫–æ–ª–æ–∫)', description: '+150 –∫ –∫–ª–∏–∫—É', baseCost: 250000, costMultiplier: 1.7, type: 'click', value: 150, currentLevel: 0, requiredEssence: 500000 },
     { id: 'auto5', name: '–≠—Ñ–∏—Ä–Ω—ã–π –ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ç–æ—Ä', description: '+250 –≤ —Å–µ–∫—É–Ω–¥—É', baseCost: 1000000, costMultiplier: 2.0, type: 'auto', value: 250, currentLevel: 0, requiredEssence: 1200000 },
     { id: 'auto6', name: '–ü–æ—Ä—Ç–∞–ª –≤ –º–∏—Ä –≠—Å—Å–µ–Ω—Ü–∏–∏', description: '+1000 –≤ —Å–µ–∫—É–Ω–¥—É', baseCost: 5000000, costMultiplier: 2.2, type: 'auto', value: 1000, currentLevel: 0, requiredEssence: 6000000 },

    // --- –¢–∏—Ä 5 (–û—á–µ–Ω—å –¥–æ—Ä–æ–≥–æ–π, –¥–ª—è —ç–Ω–¥–≥–µ–π–º–∞) ---
     { id: 'click5', name: '–ü—Ä–∏–∫–æ—Å–Ω–æ–≤–µ–Ω–∏–µ –¢–≤–æ—Ä—Ü–∞', description: '+1000 –∫ –∫–ª–∏–∫—É', baseCost: 10000000, costMultiplier: 1.8, type: 'click', value: 1000, currentLevel: 0, requiredEssence: 15000000 },
     { id: 'auto7', name: '–ü–æ—Ç–æ–∫ –ß–∏—Å—Ç–æ–π –ú–∞–≥–∏–∏', description: '+5000 –≤ —Å–µ–∫—É–Ω–¥—É', baseCost: 50000000, costMultiplier: 2.1, type: 'auto', value: 5000, currentLevel: 0, requiredEssence: 60000000 },
];

// --- –§—É–Ω–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è UI ---
// ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Å—Ç–∞—é—Ç—Å—è –∫–∞–∫ –±—ã–ª–∏: updateEssenceDisplay, formatNumber, showClickFeedback) ...

// --- –õ–æ–≥–∏–∫–∞ –∫–ª–∏–∫–∞ –ø–æ –∫–æ—Ç–ª—É ---
// ... (–æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –±—ã–ª–∞) ...

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è "+1" –ø—Ä–∏ –∫–ª–∏–∫–µ ---
// ... (–æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –±—ã–ª–∞) ...

// --- –õ–æ–≥–∏–∫–∞ –∞–≤—Ç–æ-–∫–ª–∏–∫–∞ (–ø–∞—Å—Å–∏–≤–Ω—ã–π –¥–æ—Ö–æ–¥) ---
// ... (–æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –±—ã–ª–∞) ...

// --- –õ–æ–≥–∏–∫–∞ —É–ª—É—á—à–µ–Ω–∏–π ---
function calculateCost(upgrade) {
    return Math.floor(upgrade.baseCost * Math.pow(upgrade.costMultiplier, upgrade.currentLevel));
}

// !!! --- –ò–ó–ú–ï–ù–ï–ù–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø renderUpgrades --- !!!
function renderUpgrades() {
    upgradesListElement.innerHTML = ''; // –û—á–∏—â–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–¥ —Ä–µ–Ω–¥–µ—Ä–æ–º

    // –§–∏–ª—å—Ç—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–∏—è: –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –ø–æ—Ä–æ–≥ requiredEssence
    const availableUpgrades = upgrades.filter(upgrade => {
        // –ï—Å–ª–∏ —É —É–ª—É—á—à–µ–Ω–∏—è –Ω–µ—Ç requiredEssence, —Å—á–∏—Ç–∞–µ–º –µ–≥–æ 0 (–¥–æ—Å—Ç—É–ø–Ω–æ –≤—Å–µ–≥–¥–∞)
        const requirement = upgrade.requiredEssence || 0;
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º Math.floor(essence), —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø—Ä–æ–±–ª–µ–º —Å –¥—Ä–æ–±–Ω—ã–º–∏ —á–∏—Å–ª–∞–º–∏ –ø—Ä–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏–∏
        return Math.floor(essence) >= requirement;
    });

    // –°–æ—Ä—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —É–ª—É—á—à–µ–Ω–∏—è –ø–æ —Ç—Ä–µ–±—É–µ–º–æ–π —ç—Å—Å–µ–Ω—Ü–∏–∏ (–∏–ª–∏ –ø–æ —Ü–µ–Ω–µ, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ)
    availableUpgrades.sort((a, b) => (a.requiredEssence || 0) - (b.requiredEssence || 0));

    if (availableUpgrades.length === 0) {
         upgradesListElement.innerHTML = '<li><p>–ü–æ–∫–∞ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —É–ª—É—á—à–µ–Ω–∏–π. –ö–æ–ø–∏—Ç–µ —ç—Å—Å–µ–Ω—Ü–∏—é!</p></li>';
         return;
    }

    availableUpgrades.forEach(upgrade => {
        const cost = calculateCost(upgrade);
        const li = document.createElement('li');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∞–µ—Ç –ª–∏ —ç—Å—Å–µ–Ω—Ü–∏–∏ –Ω–∞ –ü–û–ö–£–ü–ö–£ (–Ω–µ –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ)
        const canAfford = essence >= cost;

        li.innerHTML = `
            <div class="upgrade-info">
                <h3>${upgrade.name} (–£—Ä. ${upgrade.currentLevel})</h3>
                <p>${upgrade.description}</p>
                <p class="upgrade-cost">–°—Ç–æ–∏–º–æ—Å—Ç—å: ${formatNumber(cost)} üß™</p>
            </div>
            <button class="buy-upgrade-btn" data-upgrade-id="${upgrade.id}" ${!canAfford ? 'disabled' : ''}>
                –ö—É–ø–∏—Ç—å
            </button>
        `;

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –∫–Ω–æ–ø–∫—É "–ö—É–ø–∏—Ç—å"
        li.querySelector('.buy-upgrade-btn').addEventListener('click', () => {
            buyUpgrade(upgrade.id);
        });

        upgradesListElement.appendChild(li);
    });
}
// !!! --- –ö–û–ù–ï–¶ –ò–ó–ú–ï–ù–ï–ù–ù–û–ô –§–£–ù–ö–¶–ò–ò renderUpgrades --- !!!


function buyUpgrade(upgradeId) {
    // –ù–∞—Ö–æ–¥–∏–º —É–ª—É—á—à–µ–Ω–∏–µ –≤ *–ø–æ–ª–Ω–æ–º* —Å–ø–∏—Å–∫–µ, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ –≤ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö
    const upgrade = upgrades.find(u => u.id === upgradeId);
    if (!upgrade) return;

    const cost = calculateCost(upgrade);
    if (essence >= cost) {
        essence -= cost;
        upgrade.currentLevel++;

        // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –±–æ–Ω—É—Å—ã –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
        recalculateBonuses();

        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        updateEssenceDisplay();
        renderUpgrades(); // –ü–µ—Ä–µ—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å —É–ª—É—á—à–µ–Ω–∏–π
    } else {
        console.log("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç—Å—Å–µ–Ω—Ü–∏–∏!");
        // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É
        showTemporaryNotification("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —ç—Å—Å–µ–Ω—Ü–∏–∏!", "error");
    }
}

// --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Å—á–µ—Ç–∞ –≤—Å–µ—Ö –±–æ–Ω—É—Å–æ–≤ ---
// –í–∞–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –µ–µ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏/–∑–∞–≥—Ä—É–∑–∫–∏, —á—Ç–æ–±—ã –±–æ–Ω—É—Å—ã –±—ã–ª–∏ –∞–∫—Ç—É–∞–ª—å–Ω—ã
function recalculateBonuses() {
    essencePerClick = 1; // –ù–∞—á–∏–Ω–∞–µ–º —Å –±–∞–∑–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
    essencePerSecond = 0; // –ù–∞—á–∏–Ω–∞–µ–º —Å –Ω—É–ª—è

    upgrades.forEach(upgrade => {
        if (upgrade.currentLevel > 0) {
            if (upgrade.type === 'click') {
                essencePerClick += upgrade.value * upgrade.currentLevel;
            } else if (upgrade.type === 'auto') {
                essencePerSecond += upgrade.value * upgrade.currentLevel;
            }
        }
    });
}

// --- –û—Ç–∫—Ä—ã—Ç–∏–µ/–ó–∞–∫—Ä—ã—Ç–∏–µ –ø–∞–Ω–µ–ª–∏ —É–ª—É—á—à–µ–Ω–∏–π ---
// ... (–æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –±—ã–ª–∞) ...

// --- –õ–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ "–î—Ä—É–∑—å—è" (–∑–∞–≥–ª—É—à–∫–∞) ---
// ... (–æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –±—ã–ª–∞) ...

// --- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ/–ó–∞–≥—Ä—É–∑–∫–∞ ---
function saveGame() {
    const gameState = {
        essence: essence,
        upgrades: upgrades.map(u => ({ id: u.id, level: u.currentLevel }))
        // –í–∞–∂–Ω–æ: –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º essencePerClick –∏ essencePerSecond,
        // —Ç–∞–∫ –∫–∞–∫ –æ–Ω–∏ –±—É–¥—É—Ç –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ —É—Ä–æ–≤–Ω–µ–π —É–ª—É—á—à–µ–Ω–∏–π.
    };
    try {
        localStorage.setItem('alchemistClickerSave', JSON.stringify(gameState));
         console.log("–ò–≥—Ä–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞");
    } catch (e) {
        console.error("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:", e);
        // –ú–æ–∂–Ω–æ —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å
        showTemporaryNotification("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞!", "error");
    }
}

function loadGame() {
    const savedState = localStorage.getItem('alchemistClickerSave');
    if (savedState) {
        try {
            const gameState = JSON.parse(savedState);
            // –ó–∞–≥—Ä—É–∂–∞–µ–º —ç—Å—Å–µ–Ω—Ü–∏—é, —É–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ —ç—Ç–æ —á–∏—Å–ª–æ
            essence = Number(gameState.essence) || 0;

            // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —É—Ä–æ–≤–Ω–∏ —É–ª—É—á—à–µ–Ω–∏–π
            upgrades.forEach(upgrade => {
                const savedUpgrade = gameState.upgrades.find(su => su.id === upgrade.id);
                upgrade.currentLevel = savedUpgrade ? (Number(savedUpgrade.level) || 0) : 0;
            });

            // –ü–µ—Ä–µ—Å—á–∏—Ç—ã–≤–∞–µ–º –±–æ–Ω—É—Å—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π
            recalculateBonuses();

            console.log("–ò–≥—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞");
        } catch (e) {
            console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:", e);
            localStorage.removeItem('alchemistClickerSave'); // –û—á–∏—â–∞–µ–º –±–∏—Ç–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
            resetGameData(); // –ù–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É
        }
    } else {
         console.log("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –Ω–∞—á–∏–Ω–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É.");
         resetGameData(); // –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –±–æ–Ω—É—Å—ã —Å–±—Ä–æ—à–µ–Ω—ã
    }
    updateEssenceDisplay(); // –û–±–Ω–æ–≤–ª—è–µ–º UI –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏/—Å–±—Ä–æ—Å–∞
}

function resetGameData() {
    essence = 0;
    upgrades.forEach(u => u.currentLevel = 0);
    recalculateBonuses(); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –±–æ–Ω—É—Å—ã
}

// --- –î–æ–±–∞–≤–∏–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ---
function showTemporaryNotification(message, type = "info") {
    const notification = document.createElement('div');
    notification.className = `notification ${type}`; // –î–æ–±–∞–≤–∏–º –∫–ª–∞—Å—Å—ã –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏
    notification.textContent = message;

    // –°—Ç–∏–ª–∏–∑—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ (–º–æ–∂–Ω–æ –≤—ã–Ω–µ—Å—Ç–∏ –≤ CSS)
    notification.style.position = 'fixed';
    notification.style.bottom = '70px'; // –ß—É—Ç—å –≤—ã—à–µ –∫–Ω–æ–ø–æ–∫
    notification.style.left = '50%';
    notification.style.transform = 'translateX(-50%)';
    notification.style.padding = '10px 20px';
    notification.style.borderRadius = '8px';
    notification.style.backgroundColor = type === 'error' ? '#e74c3c' : '#3498db';
    notification.style.color = 'white';
    notification.style.zIndex = '1000';
    notification.style.opacity = '0';
    notification.style.transition = 'opacity 0.5s ease';

    document.body.appendChild(notification);

    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è –∏ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
    setTimeout(() => { notification.style.opacity = '1'; }, 10); // –ü–æ—è–≤–ª–µ–Ω–∏–µ
    setTimeout(() => {
        notification.style.opacity = '0';
        setTimeout(() => { notification.remove(); }, 500); // –£–¥–∞–ª–∏—Ç—å –ø–æ—Å–ª–µ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
    }, 2500); // –ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ 2.5 —Å–µ–∫—É–Ω–¥—ã
}


// --- –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ---
loadGame(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–≥—Ä—É
// renderUpgrades(); // –£–±—Ä–∞–ª–∏ –æ—Ç—Å—é–¥–∞, –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ø–∞–Ω–µ–ª–∏
updateEssenceDisplay(); // –ü–µ—Ä–≤–∏—á–Ω–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —Å—á–µ—Ç–∞

// --- –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π ---
// ... (–æ—Å—Ç–∞—é—Ç—Å—è –∫–∞–∫ –±—ã–ª–∏) ...

; // –ö–æ–Ω–µ—Ü DOMContentLoaded